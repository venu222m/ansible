#https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_tags.html
#TAGS for Plays & Installing Application
#Ansible tags serve as markers that can be added to individual tasks within an Ansible playbook, 
#enabling the execution of specific or designated tasks based on these tags during playbook runs. 
#You'll occasionally need to execute only a portion of a playbook rather than the whole thing

---
  - name: Play for installing Nginx
    hosts: web:app
    tasks:
     - name: Perform Apt Update
       shell: apt update
       tags:
         - apt

     - name: Install Nginx using Apt
       apt:
         name: nginx
         state: present
       tags:
        - nginxtask

     - name: Start the Nginx Service
       shell: service nginx start
       tags:
        - service
    tags:
     - nginx

  - name: Play for installing Jq, wget, curl
    hosts: db
    tasks:
     - name: Perform Apt Update
       shell: apt update

     - name: Installing Tools
       apt:
         name: "{{ item }}"
         state: present
       with_items:
         - jq
         - wget
         - curl
    tags:
     - tools
excute command:
#ansible-playbook (playbookname).yaml -i hosts --tags tools
#only tools play only excute rather than whole thing playbook

#ansible-playbook offers five tag-related command-line options:

#--tags all - run all tasks, tagged and untagged except if never (default behavior).

#--tags tag1,tag2 - run only tasks with either the tag tag1 or the tag tag2 (also those tagged always).

#--skip-tags tag3,tag4 - run all tasks except those with either the tag tag3 or the tag tag4 or never.

#--tags tagged - run only tasks with at least one tag (never overrides).

#--tags untagged - run only tasks with no tags (always overrides).

#For example, to run only tasks and blocks tagged either configuration or packages in a very long playbook:
#ansible-playbook example.yml --tags "configuration,packages"
#To run all tasks except those tagged packages:
#ansible-playbook example.yml --skip-tags "packages"

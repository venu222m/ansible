Hereâ€™s a concrete guide to how Ansible is used in DevOps/SRE roles, tailored for 3.5+ years of experience, including:

âœ… Real-time responsibilities

ðŸ§° CLI commands

ðŸ’¡ Use cases

ðŸŽ¯ Top interview questions and answers

ðŸ“Œ Resume bullet points

âœ… Real-Time Ansible Tasks in DevOps/SRE
Responsibility	Description
Configuration Management	Install, configure software on VMs (Linux/Windows)
Infrastructure Automation	Provision servers, networking using Ansible modules
Application Deployment	Deploy WAR/ZIP/Docker apps to VMs or containers
Patching	Apply security updates automatically
File/Service Management	Copy config files, restart services (nginx, ssh, etc.)
Cloud Integration	Use azure_rm, ec2, gcp_compute modules for automation
CI/CD Integration	Run Ansible playbooks in Jenkins/GitHub Actions
Compliance Checks	Enforce system configurations (e.g., SSH hardening)

ðŸ§° Ansible CLI Commands
Command	Purpose
ansible all -m ping	Check connectivity to all hosts
ansible-playbook site.yml	Run a playbook
ansible-inventory --list	View inventory details
ansible localhost -m setup	Gather system facts
ansible-playbook -i hosts playbook.yml --check	Run in dry-run mode
ansible-vault encrypt secrets.yml	Encrypt file with Ansible Vault
ansible-doc -l	List all modules

ðŸ’¡ Ansible Use Cases in DevOps/SRE
Use Case	Example
Provisioning	Create Azure VMs using Ansible modules
App Deployment	Deploy Spring Boot app on multiple VMs
Docker Automation	Install Docker, build/push images
Kubernetes	Configure kubeadm nodes with playbooks
File Sync	Copy config files to 100s of servers
Patching	Automate Linux patching with Ansible
Agentless Ops	No agent needed â€” works over SSH/WinRM
Hybrid Cloud	Manage AWS, Azure, and on-prem together

ðŸ§  Ansible Top Interview Questions & Answers
âœ… Q1: What is Ansible and how does it work?
A:
Ansible is an agentless configuration management and automation tool. It uses SSH (Linux) or WinRM (Windows) to push configurations using YAML playbooks.

âœ… Q2: What is a Playbook in Ansible?
A:
A playbook is a YAML file defining a set of tasks to automate on one or more hosts.

Example:

yaml
Copy
Edit
- name: Install Apache
  hosts: webservers
  become: yes
  tasks:
    - name: Install package
      apt:
        name: apache2
        state: present
âœ… Q3: What is the Ansible inventory?
A:
Itâ€™s a list of managed hosts defined in /etc/ansible/hosts or a dynamic source (e.g., AWS EC2).

Example:

ini
Copy
Edit
[web]
web1.example.com
web2.example.com

[db]
db1.example.com
âœ… Q4: What are Ansible modules?
A:
Modules are the building blocks that perform actions.
Examples: yum, apt, copy, service, user, azure_rm_virtualmachine.

âœ… Q5: Whatâ€™s the difference between roles, tasks, and handlers?
Term	Description
Tasks	Individual units of work (install pkg, restart service)
Handlers	Triggered on change (e.g., restart nginx if config changed)
Roles	Reusable units of playbooks with predefined folder structure

âœ… Q6: How do you pass variables in Ansible?
A:

Through inventory (host_vars, group_vars)

--extra-vars CLI flag

From .yml vars file

Inside playbook directly

âœ… Q7: How do you use Ansible Vault?
A:
Encrypt sensitive data like credentials.

bash
Copy
Edit
ansible-vault encrypt secrets.yml
ansible-playbook playbook.yml --ask-vault-pass
âœ… Q8: How does Ansible handle idempotency?
A:
Modules are designed to run only if the state is not already achieved â€” this makes Ansible safe for multiple runs.

âœ… Q9: How is Ansible integrated in CI/CD?
A:

Write infrastructure tasks as playbooks

Trigger them in Jenkins/GitHub Actions pipelines

Example: ansible-playbook deploy_app.yml as a build step

âœ… Q10: Whatâ€™s the difference between static and dynamic inventory?
Type	Description
Static	Hosts defined in a file
Dynamic	Generated from cloud API (e.g., AWS EC2, Azure RM)

ðŸ“Œ Ansible Resume Bullet Points (3.5+ Yrs)
Automated infrastructure provisioning and app deployment using Ansible playbooks and roles.

Developed reusable Ansible roles for Apache, Docker, Java, and Kubernetes setup.

Integrated Ansible playbooks with Jenkins pipelines for CI/CD automation.

Secured sensitive data using Ansible Vault and dynamic inventory for multi-cloud management.

Managed Linux patching and configuration drift using Ansible in hybrid environments.


11. can u please write logic in s ansible if another server pinging fine we can transfer file source server to another server 
and if server not ping we cant transfer
1️⃣ Ansible Control Node Setup
Requirement	Explanation
✅ Ansible Installed	Install Ansible on control machine
✅ SSH access to target servers	Control node must be able to SSH to all target servers
✅ SSH Key setup (recommended)	Set up passwordless SSH using keys
✅ Python installed on remote servers	Ansible requires Python on managed nodes
✅ Correct inventory/vars configured	Have the correct server IPs, usernames, file paths
========================================================
===============
Explanation:
This playbook runs locally on the control machine (hosts: localhost).

We're not running this playbook on the remote servers directly. Instead, we're using delegate_to to interact with remote servers after doing checks.

gather_facts: no disables fact collection to speed up execution (since we don’t need system facts from localhost).

yaml
Copy
Edit
  vars:
    dest_servers:
      - 192.168.1.100
      - 192.168.1.101
      - 192.168.1.102
    source_file: /path/to/source/file.txt
    dest_user: remoteuser
    dest_path: /path/to/destination/
✅ Explanation:
Here we define variables:

dest_servers: list of IP addresses (servers where we want to transfer file if reachable)

source_file: file to transfer (from Ansible control machine)

dest_user: user account on destination servers

dest_path: destination path on remote servers

yaml
Copy
Edit
  tasks:
    - name: Loop through servers
      block:
✅ Explanation:
This task uses a block, which groups multiple tasks that will be executed for each server in the list.

🔄 The LOOP starts here:
yaml
Copy
Edit
      loop: "{{ dest_servers }}"
We iterate over each server IP stored in dest_servers list.

✅ Inside the block, the following tasks are executed for each server:
🔹 1st Task: Ping Check
yaml
Copy
Edit
        - name: Check if server {{ item }} is reachable
          shell: "ping -c 2 {{ item }}"
          register: ping_result
          ignore_errors: yes
Runs ping -c 2 for the current item (server IP in loop).

register: ping_result saves the output (exit code and stdout/stderr).

ignore_errors: yes — prevents the playbook from failing if ping fails (because we want to continue to next condition).

🔹 2nd Task: File Transfer (only if ping was successful)
yaml
Copy
Edit
        - name: Transfer file if ping successful
          when: ping_result.rc == 0
          delegate_to: "{{ item }}"
          copy:
            src: "{{ source_file }}"
            dest: "{{ dest_path }}"
          become: yes
          remote_user: "{{ dest_user }}"
✅ Key details:

when: ping_result.rc == 0 — only runs if ping returned exit code 0 (successful).

delegate_to: "{{ item }}" — very important!

This means that Ansible connects directly to the remote server only for this task.

copy: module — copies the file from the control machine to the remote server.

become: yes — elevate privileges (use sudo if required).

remote_user: "{{ dest_user }}" — defines SSH user for remote connection.

🔹 3rd Task: Print message if server not reachable
yaml
Copy
Edit
        - name: Print message if server is not reachable
          when: ping_result.rc != 0
          debug:
            msg: "Server {{ item }} is not reachable. Skipping file transfer."
✅ Explanation:

Only runs if ping failed (rc != 0)

Just prints a message saying that file transfer will be skipped for this server.==========
==========================================================================
ansible-project/
│
├── inventory/
│   └── inventory.ini         <-- Inventory file
│
├── playbooks/
│   └── file_transfer.yml     <-- Your main playbook
│
├── files/
│   └── file.txt              <-- Source file to transfer
│
├── roles/
│   └── file_transfer/        <-- Create role for better modularity
│       ├── tasks/
│       │   └── main.yml
│       ├── vars/
│       │   └── main.yml
│       ├── handlers/
│       │   └── main.yml
│       └── templates/
│
├── group_vars/
│   └── app_servers.yml       <-- Group-level variables
│
├── ansible.cfg               <-- Global config file (optional)
└── README.md
===============================simple playbook for single server===========================================
---
- name: File Transfer Automation
  hosts: app_servers
  become: yes

  tasks:
    - name: Copy file to target servers
      copy:
        src: "../files/file.txt"
        dest: "/opt/file.txt"
====================================================
---
- name: Transfer file to multiple servers if reachable
  hosts: localhost
  gather_facts: no
  vars:
    dest_servers:
      - 192.168.1.100
      - 192.168.1.101
      - 192.168.1.102
    source_file: /path/to/source/file.txt
    dest_user: remoteuser
    dest_path: /path/to/destination/

  tasks:
    - name: Loop through servers
      block:
        - name: Check if server {{ item }} is reachable
          shell: "ping -c 2 {{ item }}"
          register: ping_result
          ignore_errors: yes

        - name: Transfer file if ping successful
          when: ping_result.rc == 0
          delegate_to: "{{ item }}"
          copy:
            src: "{{ source_file }}"
            dest: "{{ dest_path }}"
          become: yes
          remote_user: "{{ dest_user }}"

        - name: Print message if server is not reachable
          when: ping_result.rc != 0
          debug:
            msg: "Server {{ item }} is not reachable. Skipping file transfer."
      loop: "{{ dest_servers }}"
=================================Create Inventory File
inventory/inventory.ini
[dest_servers]
192.168.1.100 ansible_user=remoteuser
192.168.1.101 ansible_user=remoteuser
192.168.1.102 ansible_user=remoteuser
=================playbook.yaml
- name: Transfer file to multiple servers if reachable
  hosts: dest_servers
  gather_facts: no
  tasks:

    - name: Check if server is reachable
      shell: "ping -c 2 {{ inventory_hostname }}"
      register: ping_result
      ignore_errors: yes

    - name: Transfer file if ping successful
      when: ping_result.rc == 0
      copy:
        src: /path/to/source/file.txt
        dest: /path/to/destination/file.txt
      become: yes

    - name: Print message if server is not reachable
      when: ping_result.rc != 0
      debug:
        msg: "Server {{ inventory_hostname }} is not reachable. Skipping file transfer."
------------------------------------
